name: CI/CD for ChatBot Database

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

env:
  PAT: ${{ secrets.PAT }}  
  SERVER_HOST: ${{ secrets.SERVER_HOST }}
  SERVER_USERNAME: ${{ secrets.SERVER_USERNAME }}
  SERVER_KEY: ${{ secrets.SERVER_KEY }}
  GHCR_USER: ${{ github.repository_owner }}
  SQLALCHEMY_DATABASE_URI: ${{ secrets.SQLALCHEMY_DATABASE_URI }}
  REDIS_HOST: ${{ secrets.REDIS_HOST }}
  REDIS_PORT: ${{ secrets.REDIS_PORT }}
  REDIS_DB: ${{ secrets.REDIS_DB }}
  REDIS_DECODE_RESPONSES: ${{ secrets.REDIS_DECODE_RESPONSES }}

jobs:
  build-and-push-api:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to GitHub Container Registry
        run: echo "${{ secrets.PAT }}" | docker login ghcr.io -u ${{ github.repository_owner }} --password-stdin

      - name: Build and Push API Server
        run: |
          REPO_NAME=$(echo "${{ github.repository_owner }}" | tr '[:upper:]' '[:lower:]')
          docker buildx build \
            --platform linux/amd64 \
            --build-arg SQLALCHEMY_DATABASE_URI=${{ secrets.SQLALCHEMY_DATABASE_URI }} \
            -t ghcr.io/$REPO_NAME/chatbot-database:latest \
            --push .

  deploy-api:
    runs-on: ubuntu-latest
    needs: build-and-push-api

    steps:
      - name: Deploy to Azure Container Instance
        uses: appleboy/ssh-action@v0.1.6
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USERNAME }}
          key: ${{ secrets.SERVER_KEY }}
          script: |
            echo "ðŸ”¹ Deleting existing Azure Container Instance (if any)..."
            az container delete \
              --resource-group sse-cloud-lab \
              --name chatbot-database \
              --yes


            echo "ðŸ”¹ Deploying new Azure Container Instance..."
            REPO_NAME=$(echo "${{ github.repository_owner }}" | tr '[:upper:]' '[:lower:]')

            az container create \
              --resource-group sse-cloud-lab \
              --name chatbot-database \
              --image ghcr.io/polumm/chatbot-database:latest \
              --os-type Linux \
              --cpu 1 \
              --memory 1.5 \
              --dns-name-label chatbot-database \
              --ports 6003 \
              --environment-variables \
                FLASK_ENV=production \
                SQLALCHEMY_DATABASE_URI="${{secrets.SQLALCHEMY_DATABASE_URI}}" \
                REDIS_HOST="${{secrets.REDIS_HOST}}" \
                REDIS_PORT="${{secrets.REDIS_PORT}}" \
                REDIS_DB="${{secrets.REDIS_DB}}" \
                REDIS_DECODE_RESPONSES="${{secrets.REDIS_DECODE_RESPONSES}}"

  # deploy-api:
  #   runs-on: ubuntu-latest
  #   needs: build-and-push-api

  #   steps:
  #     - name: Deploy to server
  #       uses: appleboy/ssh-action@v0.1.6
  #       with:
  #         host: ${{ secrets.SERVER_HOST }}
  #         username: ${{ secrets.SERVER_USERNAME }}
  #         key: ${{ secrets.SERVER_KEY }}
  #         script: |
  #           set -e  # Exit on error

  #           REPO_NAME=$(echo "${{ github.repository_owner }}" | tr '[:upper:]' '[:lower:]')

  #           echo "ðŸ”¹ Stopping existing container (if running)..."
  #           docker stop chatbot-database || true  
  #           docker rm chatbot-database || true   

  #           echo "ðŸ”¹ Pulling latest Docker image..."
  #           docker pull ghcr.io/$REPO_NAME/chatbot-database:latest

  #           echo "ðŸ”¹ Running new container..."
  #           docker run -d --name chatbot-database -p 6003:6003 \
  #             -e FLASK_ENV=deployment \
  #             -e SQLALCHEMY_DATABASE_URI="${{secrets.SQLALCHEMY_DATABASE_URI}}" \
  #             ghcr.io/$REPO_NAME/chatbot-database:latest

  #           echo "âœ… Deployment complete!"
  #           exit 0
